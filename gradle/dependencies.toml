[versions]
# Language, plugins and tools, mobile-services independent
kotlin = "1.9.25"
ksp = "1.9.25-1.0.20"
androidPlugin = "8.7.1"
versionsPlugin = "0.51.0"
spotlessPlugin = "6.25.0"
ktlintTool = "1.3.1"
grgitPlugin = "5.3.0"
mavenPublishPlugin = "0.30.0"
# KotlinX libraries
kotlinx-coroutines = "1.9.0"
# AndroidX libraries
androidx-activity = "1.9.3"
androidx-annotation = "1.9.0"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.2.0-rc01"
androidx-core = "1.13.1"
androidx-fragment = "1.8.4"
androidx-lifecycle = "2.8.6"
androidx-savedstate = "1.2.1"
androidx-work = "2.9.1"
# Material Design Components and UI
material = "1.12.0"
#
timber = "5.0.1"
# Dependency Injection
dagger = "2.52"
anvil = "2.5.0-beta04"        # Не обновлять, приводит к падению Sealant: https://github.com/square/anvil/issues/953
# Tools
kotlinpoet = "2.0.0"
auto-service = "1.1.1"
auto-service-ksp = "1.2.0"
# Testing instruments
junit4 = "4.13.2"
androidx-test-core = "1.6.1"
androidx-test-monitor = "1.7.2"
androidx-test-orchestrator = "1.5.1"
androidx-test-rules = "1.6.1"
androidx-test-runner = "1.6.2"
androidx-test-ext-junit = "1.2.1"
androidx-test-espresso = "3.6.1"

[libraries]
#
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
anvil-gradlePlugin = { group = "com.squareup.anvil", name = "gradle-plugin", version.ref = "anvil" }
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidPlugin" }
spotless-gradlePlugin = { group = "com.diffplug.spotless", name = "spotless-plugin-gradle", version.ref = "spotlessPlugin" }
mavenPublish-default-gradlePlugin = { group = "com.vanniktech.maven.publish", name = "com.vanniktech.maven.publish.gradle.plugin", version.ref = "mavenPublishPlugin" }
#
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin" }
#
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
#
androidx-activity = { module = "androidx.activity:activity", version.ref = "androidx-activity" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-core = { module = "androidx.core:core", version.ref = "androidx-core" }
androidx-coreKtx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "androidx-fragment" }
androidx-fragmentKtx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }
androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
androidx-savedstate = { module = "androidx.savedstate:savedstate", version.ref = "androidx-savedstate" }
androidx-savedstateKtx = { module = "androidx.savedstate:savedstate-ktx", version.ref = "androidx-savedstate" }
androidx-work-runtime = { module = "androidx.work:work-runtime", version.ref = "androidx-work" }
#
material = { module = "com.google.android.material:material", version.ref = "material" }
#
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
# Dependency Injection
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger-runtime = { module = "com.google.dagger:dagger", version.ref = "dagger" }
anvil-annotations = { module = "com.squareup.anvil:annotations", version.ref = "anvil" }
anvil-annotations-optional = { module = "com.squareup.anvil:annotations-optional", version.ref = "anvil" }
anvil-compiler = { module = "com.squareup.anvil:compiler", version.ref = "anvil" }
anvil-compiler-api = { module = "com.squareup.anvil:compiler-api", version.ref = "anvil" }
anvil-compiler-utils = { module = "com.squareup.anvil:compiler-utils", version.ref = "anvil" }
# Tools
ksp = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "ksp" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-javapoet = { module = "com.squareup:kotlinpoet-javapoet", version.ref = "kotlinpoet" }
kotlinpoet-kotlinxMetadata = { module = "com.squareup:kotlinpoet-metadata", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }
auto-service-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "auto-service" }
auto-service-ksp = { module = "dev.zacsweers.autoservice:auto-service-ksp", version.ref = "auto-service-ksp" }
# Testing instruments
junit4 = { module = "junit:junit", version.ref = "junit4" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-annotations = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
kotlin-test-junit4 = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test-core" }
androidx-test-coreKtx = { module = "androidx.test:core-ktx", version.ref = "androidx-test-core" }
androidx-test-monitor = { module = "androidx.test:monitor", version.ref = "androidx-test-monitor" }
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidx-test-orchestrator" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test-rules" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-junit" }
androidx-test-ext-junitKtx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx-test-ext-junit" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }

[plugins]
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotlessPlugin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
anvil = { id = "com.squareup.anvil", version.ref = "anvil" }
android-application = { id = "com.android.application", version.ref = "androidPlugin" }
android-library = { id = "com.android.library", version.ref = "androidPlugin" }
grgit = { id = "org.ajoberstar.grgit", version.ref = "grgitPlugin" }
grgit-service = { id = "org.ajoberstar.grgit.service", version.ref = "grgitPlugin" }
mavenPublish = { id = "com.vanniktech.maven.publish", version.ref = "mavenPublishPlugin" }
mavenPublish-base = { id = "com.vanniktech.maven.publish.base", version.ref = "mavenPublishPlugin" }
